Length: This method returns the length of a string.
String str = "Hello World";
int len = str.length();
System.out.println("Length of the string is: " + len);

Concat: This method concatenates one string to the end of another string.
String str1 = "Hello ";
String str2 = "World";
String str3 = str1.concat(str2);
System.out.println(str3);

Trim: This method removes any leading and trailing whitespace from a string.
String str = " Hello World ";
str = str.trim();
System.out.println(str);

CharAt: This method returns the character at the specified index in a string.
String str = "Hello World";
char ch = str.charAt(0);
System.out.println("Character at 0 index is: " + ch);

Contains: This method checks if the string contains the specified sequence of char values.
String str = "Hello World";
boolean result = str.contains("World");
System.out.println("Contains sequence 'World': " + result);

Equals: This method compares this string to the specified object.
String str1 = "Hello World";
String str2 = "Hello World";
boolean result = str1.equals(str2);
System.out.println("Both strings are equal: " + result);

Replace: This method replaces each substring of this string that matches the literal target sequence with the specified literal replacement sequence.
String str = "Hello World";
str = str.replace('o', 'a');
System.out.println(str);

Substring: This method returns a new string that is a substring of this string.
String str = "Hello World";
str = str.substring(0, 5);
System.out.println(str);

Uppercase: This method converts all of the characters in this String to upper case.
String str = "Hello World";
str = str.toUpperCase();
System.out.println(str);

Lowercase: This method converts all of the characters in this String to lower case.
String str = "Hello World";
str = str.toLowerCase();
System.out.println(str);

Split: This method splits this string around matches of the given regular expression.
String str = "Hello-World";
String[] arrOfStr = str.split("-");
for (String a : arrOfStr)
    System.out.println(a);

Arrays.toString: This method returns a string representation of the contents of the specified array.
int[] array = new int[]{1, 2, 3, 4, 5};
System.out.println(Arrays.toString(array));
